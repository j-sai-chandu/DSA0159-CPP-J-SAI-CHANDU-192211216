#include <iostream>

class ComplexNumber {
private:
    double real;
    double imaginary;

public:
    ComplexNumber() : real(0.0), imaginary(0.0) {}

    ComplexNumber(double r, double i) : real(r), imaginary(i) {}

    // Overloading binary operator '+'
    ComplexNumber operator+(const ComplexNumber& other) const {
        ComplexNumber result;
        result.real = real + other.real;
        result.imaginary = imaginary + other.imaginary;
        return result;
    }

    void display() const {
        std::cout << real << " + " << imaginary << "i";
    }
};

int main() {
    ComplexNumber num1(2.5, 3.0);
    ComplexNumber num2(1.5, 2.0);
    ComplexNumber sum = num1 + num2; // Using overloaded binary operator '+'

    std::cout << "Sum of ";
    num1.display();
    std::cout << " and ";
    num2.display();
    std::cout << " is ";
    sum.display();
    std::cout << std::endl;

    return 0;
}
